spring.datasource.druid.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.druid.url=jdbc:mysql://localhost:3306/location?serverTimezone=GMT
spring.datasource.druid.username=root
spring.datasource.druid.password=admin
#jpa配置显示SQL语句
spring.jpa.show-sql= true
#指定json序列化顺序
spring.jackson.mapper.sort-properties-alphabetically=true

#以下为druid连接池配置
# 初始化时建立物理连接的个数
spring.datasource.druid.initial-size=5
# 最大连接池数量
spring.datasource.druid.max-active=30
# 最小连接池数量
spring.datasource.druid.min-idle=5
# 获取连接时最大等待时间，单位毫秒
spring.datasource.druid.max-wait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 连接保持空闲而不被驱逐的最小时间
spring.datasource.druid.min-evictable-idle-time-millis=300000
# 用来检测连接是否有效的sql，要求是一个查询语句
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
# 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.test-while-idle=true
#做了这个配置会降低性能。
spring.datasource.druid.test-on-borrow=false
#做了这个配置会降低性能。
spring.datasource.druid.test-on-return=false
# 是否缓存preparedStatement，MySQL不支持游标，关闭
spring.datasource.druid.pool-prepared-statements=false
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计
spring.datasource.druid.filters=stat,wall
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
# 合并多个DruidDataSource的监控数据
spring.datasource.druid.use-global-data-source-stat=true

#配置url编码为utf-8以接收rest风格参数
server.tomcat.uri-encoding=UTF-8

#SpringbootActuatr监控信息配置
info.app.name=spring-boot-actuator
info.app.version= 1.0.0
info.app.test=test

#加载所有的端点
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.server.port = 9091
#禁止shutdown命令
management.endpoint.shutdown.enabled=false

#SpringbootAdmin Server监控端口
server.port=9090
spring.application.name=LocationServer
spring.boot.admin.client.url=http://localhost:9000
#client端baseURL
spring.boot.admin.client.instance.service-base-url=http://localhost:9090

#RPC接口Dubbo设置
dubbo.application.name=dubbo-provider
dubbo.scan.base-packages=com.ltr.location.service
dubbo.protocol.name=dubbo
dubbo.protocol.port=20880
dubbo.protocol.serialization=fastjson
#Dubbo服务注册中心地址
dubbo.registry.address=zookeeper://127.0.0.1:2181

# Redis服务器地址
spring.redis.host=localhost
# Redis服务器连接端口
spring.redis.port=6379  
# Redis服务器连接密码
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制） 默认 8
spring.redis.lettuce.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
spring.redis.lettuce.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.lettuce.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.lettuce.pool.min-idle=0